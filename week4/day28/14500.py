import sys
input = sys.stdin.readline

case = [
    # 일자
    [[0, 0], [0, 1], [0, 2], [0, 3]],
    [[0, 0], [1, 0], [2, 0], [3, 0]],
    # 정사각형
    [[0, 0], [0, 1], [1, 0], [1, 1]],
    # L 모양
    [[0, 0], [1, 0], [2, 0], [2, 1]],
    [[0, 0], [1, 0], [0, 1], [0, 2]],
    [[0, 0], [0, 1], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 2]],
    [[0, 0], [0, 1], [-1, 1], [-2, 1]],
    [[0, 0], [1, 0], [1, 1], [1, 2]],
    [[0, 0], [0, 1], [1, 0], [2, 0]],
    [[0, 0], [0, 1], [0, 2], [1, 2]],
    # 지그재그
    [[0, 0], [1, 0], [1, 1], [2, 1]],
    [[0, 0], [0, 1], [-1, 1], [-1, 2]],
    [[0, 0], [0, 1], [-1, 1], [1, 0]],
    [[0, 0], [0, 1], [1, 1], [1, 2]],
    # ㅗ
    [[0, 0], [0, 1], [0, 2], [1, 1]],
    [[0, 0], [-1, 1], [0, 1], [1, 1]],
    [[0, 0], [0, 1], [0, 2], [-1, 1]],
    [[0, 0], [1, 0], [2, 0], [1, 1]]
]

n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]

def DFS(x, y):
    global res
    for i in range(19):
        sum = 0
        for j in range(4):
            xx = x+case[i][j][1]
            yy = y+case[i][j][0]
            if 0<=xx<m and 0<=yy<n:
                sum += board[y+case[i][j][0]][x+case[i][j][1]]
        res = max(res, sum)

res = 0
for y in range(n):
    for x in range(m):
        DFS(x, y)
print(res)